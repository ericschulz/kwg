cex = 1.6, col = "black")
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[21], 40),
cex = 1.6, col = "black")
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[21], 40),
cex = 1, col = "black")
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[21], 50),
cex = 1, col = "black")
for (i in 1:nrow(dat)){
pn<-dat$plot_number[i]
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 50),
cex = 1, col = "black")
Sys.sleep(1)
}
dat$plot_number
dat$trial<-ave(dat$X, dat$pid, FUN=seq_along)
dat$trial
dat$trial<-ave(dat$X, dat$pid, FUN=seq_along)
pn<-dat$plot_number[i]
paste0("id", dat$pid[i], "plot", dat$plot_number, ".png")
paste0("id", dat$pid[i], "plot", dat$trial[i], ".png")
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"))
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 50),
cex = 1, col = "black")
dev.off()
dev.off()
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"))
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
dev.off()
dev.off()
dev.off()
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"))
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 50),
cex = 1, col = "black")
dev.off()
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=400, height=600)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 50),
cex = 1, col = "black")
dev.off()
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=400, height=500)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 50),
cex = 2, col = "black")
dev.off()
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=400, height=500)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 50),
cex = 1.2, col = "black")
dev.off()
dat$trial<-ave(dat$X, dat$pid, FUN=seq_along)
for (i in 1:nrow(dat)){
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=400, height=500)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 50),
cex = 1.2, col = "black")
dev.off()
}
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=400, height=500)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 30),
cex = 1.2, col = "black")
dev.off()
}
dat$trial<-ave(dat$X, dat$pid, FUN=seq_along)
for (i in 1:nrow(dat)){
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=400, height=500)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 30),
cex = 1.2, col = "black")
dev.off()
}
dat$trial<-ave(dat$X, dat$pid, FUN=seq_along)
for (i in 1:nrow(dat)){
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=400, height=500)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 40),
cex = 1.2, col = "black")
dev.off()
}
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=400, height=500)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 50),
cex = 1.2, col = "black")
dev.off()
}
d<-read.csv("data/list.csv")
dat$trial<-ave(dat$X, dat$pid, FUN=seq_along)
for (i in 1:nrow(dat)){
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=400, height=500)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 50),
cex = 1.2, col = "black")
dev.off()
}
dat$trial<-ave(dat$X, dat$pid, FUN=seq_along)
for (i in 1:nrow(dat)){
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=400, height=500)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 45),
cex = 1.2, col = "black")
dev.off()
}
dat$trial<-ave(dat$X, dat$pid, FUN=seq_along)
for (i in 1:nrow(dat)){
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=400, height=600)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 45),
cex = 1.2, col = "black")
dev.off()
}
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=500, height=600)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 45),
cex = 1.1, col = "black")
dev.off()
}
dat$trial<-ave(dat$X, dat$pid, FUN=seq_along)
for (i in 1:nrow(dat)){
pn<-dat$plot_number[i]
png(paste0("descs/id", dat$pid[i], "plot", dat$trial[i], ".png"), width=500, height=600)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 45),
cex = 1.1, col = "black")
dev.off()
}
dat$trial<-ave(dat$X, dat$pid, FUN=seq_along)
for (i in 1:nrow(dat)){
pn<-dat$plot_number[i]
png(paste0("descs/plot", i, ".png"), width=500, height=600)
par(mfrow=c(2,1))
plot(as.numeric(d[pn+1,-1])/max(d[pn+1,-1]), pch=19, xaxt="n", yaxt="n", ylab="", xlab="")
plot(c(0, 1), c(0, 1), ann = F, bty = 'n', type = 'n', xaxt = 'n', yaxt = 'n')
text(x = 0.5, y = 0.5, wrap.labels(dat$description[i], 45),
cex = 1.1, col = "black")
dev.off()
}
mj<-fromJSON('https://comparekernels.firebaseio.com/.json)
mj<-fromJSON('https://comparekernels.firebaseio.com/.json')
m<-mj[[length(mj)]]
m$ratecollect
m$showcollect1
m$gender
m$age
dp<-read.csv("kwg/gpucbparams.csv")
getwd()
setwd("/home/hanshalbe/")
dp<-read.csv("kwg/gpucbparams.csv")
da<-ddply(read.csv("kwg/kwgdata.csv"), ~id, summarize, age=agegroup[1], cond=cond[1])
dp$age<-dp$cond<-0
for (i in 1:nrow(dp)){
dp$cond[i]<-paste(da$cond[dp$id[i]==da$id])
dp$age[i]<-paste(da$age[dp$id[i]==da$id])
}
mymean<-function(x) {mean(x[x<=5])}
dp<-ddply(dp, ~cond+age, summarize, lambda=mymean(lambda), beta=mymean(beta))
dp$mu<-mean(dd$mu)
dp$Age<-factor(dp$age, levels=c("7-8", "9-11", ">18"))
cbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
p1 <- ggplot(dd, aes(y=beta, x=lambda, fill=mu)) +
scale_fill_viridis(name="Mean\nReward")+
geom_tile(color = "black") +
geom_point(data=dp,aes(x=lambda,y=beta, col=Age, shape=Age) , fill="black", size=7) +
scale_y_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_x_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_color_manual(values= c(cbPalette[c(7)],"skyblue", "grey40"))+
xlab(expression(lambda))+ylab(expression(beta))+
ggtitle("Simulated performance")+
theme_minimal()+
facet_wrap(~cond)+
theme(text = element_text(size=20,  family="sans"))
p1
library(viridis)
dp$age<-dp$cond<-0
for (i in 1:nrow(dp)){
dp$cond[i]<-paste(da$cond[dp$id[i]==da$id])
dp$age[i]<-paste(da$age[dp$id[i]==da$id])
}
mymean<-function(x) {mean(x[x<=5])}
dp<-ddply(dp, ~cond+age, summarize, lambda=mymean(lambda), beta=mymean(beta))
dp$mu<-mean(dd$mu)
dp$Age<-factor(dp$age, levels=c("7-8", "9-11", ">18"))
cbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
p1 <- ggplot(dd, aes(y=beta, x=lambda, fill=mu)) +
scale_fill_viridis(name="Mean\nReward")+
geom_tile(color = "black") +
geom_point(data=dp,aes(x=lambda,y=beta, col=Age, shape=Age) , fill="black", size=7) +
scale_y_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_x_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_color_manual(values= c(cbPalette[c(7)],"skyblue", "grey40"))+
xlab(expression(lambda))+ylab(expression(beta))+
ggtitle("Simulated performance")+
theme_minimal()+
facet_wrap(~cond)+
theme(text = element_text(size=20,  family="sans"))
p1
dd
p1 <- ggplot(dp, aes(y=beta, x=lambda, fill=mu)) +
scale_fill_viridis(name="Mean\nReward")+
geom_tile(color = "black") +
geom_point(data=dp,aes(x=lambda,y=beta, col=Age, shape=Age) , fill="black", size=7) +
scale_y_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_x_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_color_manual(values= c(cbPalette[c(7)],"skyblue", "grey40"))+
xlab(expression(lambda))+ylab(expression(beta))+
ggtitle("Simulated performance")+
theme_minimal()+
facet_wrap(~cond)+
theme(text = element_text(size=20,  family="sans"))
p1
dp
dp<-read.csv("kwg/gpucbparams.csv")
dp
da<-ddply(read.csv("kwg/kwgdata.csv"), ~id, summarize, age=agegroup[1], cond=cond[1])
dp$age<-dp$cond<-0
for (i in 1:nrow(dp)){
dp$cond[i]<-paste(da$cond[dp$id[i]==da$id])
dp$age[i]<-paste(da$age[dp$id[i]==da$id])
}
mymean<-function(x) {mean(x[x<=5])}
dp<-ddply(dp, ~cond+age, summarize, lambda=mymean(lambda), beta=mymean(beta))
dp$mu<-mean(dd$mu)
dp$mu
dp
dp$Age<-factor(dp$age, levels=c("7-8", "9-11", ">18"))
cbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
p1 <- ggplot(dp, aes(y=beta, x=lambda, fill=mu)) +
scale_fill_viridis(name="Mean\nReward")+
geom_tile(color = "black") +
geom_point(data=dp,aes(x=lambda,y=beta, col=Age, shape=Age) , fill="black", size=7) +
scale_y_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_x_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_color_manual(values= c(cbPalette[c(7)],"skyblue", "grey40"))+
xlab(expression(lambda))+ylab(expression(beta))+
ggtitle("Simulated performance")+
theme_minimal()+
facet_wrap(~cond)+
theme(text = element_text(size=20,  family="sans"))
p1
dp<-read.csv("kwg/gpucbparams.csv")
da<-ddply(read.csv("kwg/kwgdata.csv"), ~id, summarize, age=agegroup[1], cond=cond[1])
dp$age<-dp$cond<-0
for (i in 1:nrow(dp)){
dp$cond[i]<-paste(da$cond[dp$id[i]==da$id])
dp$age[i]<-paste(da$age[dp$id[i]==da$id])
}
mymean<-function(x) {mean(x[x<=5])}
dd<-dp
dp<-ddply(dp, ~cond+age, summarize, lambda=mymean(lambda), beta=mymean(beta))
dp$mu<-mean(dd$mu)
dp$Age<-factor(dp$age, levels=c("7-8", "9-11", ">18"))
cbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
p1 <- ggplot(dd, aes(y=beta, x=lambda, fill=mu)) +
scale_fill_viridis(name="Mean\nReward")+
geom_tile(color = "black") +
geom_point(data=dp,aes(x=lambda,y=beta, col=Age, shape=Age) , fill="black", size=7) +
scale_y_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_x_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_color_manual(values= c(cbPalette[c(7)],"skyblue", "grey40"))+
xlab(expression(lambda))+ylab(expression(beta))+
ggtitle("Simulated performance")+
theme_minimal()+
facet_wrap(~cond)+
theme(text = element_text(size=20,  family="sans"))
p1
da
library(ggplot2)
library(viridis)
dparams<-read.csv("optimalparameters2.csv")
dd<-data.frame(beta=rep(dparams$beta, 2),
lambda=rep(dparams$lambda, 2),
mu=c(dparams$rough,dparams$smooth),
cond=rep(c("Rough", "Smooth"), each=nrow(dparams)))
dd1<-subset(dd, cond=="Rough")
dd1<-subset(dd1, mu>=(max(dd1$mu)-0.4))
dd2<-subset(dd, cond=="Smooth")
dd2<-subset(dd2, mu>=(max(dd2$mu)-0.36))
median(dd1$lambda)
range(dd1$lambda)
median(dd2$lambda)
range(dd2$lambda)
nrow(dd1)
nrow(dd2)
median(dd1$beta)
range(dd1$beta)
median(dd2$beta)
range(dd2$beta)
dp<-read.csv("kwg/gpucbparams.csv")
da<-ddply(read.csv("kwg/kwgdata.csv"), ~id, summarize, age=agegroup[1], cond=cond[1])
dp$age<-dp$cond<-0
for (i in 1:nrow(dp)){
dp$cond[i]<-paste(da$cond[dp$id[i]==da$id])
dp$age[i]<-paste(da$age[dp$id[i]==da$id])
}
mymean<-function(x) {mean(x[x<=5])}
dp<-ddply(dp, ~cond+age, summarize, lambda=mymean(lambda), beta=mymean(beta))
dp$mu<-mean(dd$mu)
dp$Age<-factor(dp$age, levels=c("7-8", "9-11", ">18"))
cbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
p1 <- ggplot(dd, aes(y=beta, x=lambda, fill=mu)) +
scale_fill_viridis(name="Mean\nReward")+
geom_tile(color = "black") +
geom_point(data=dp,aes(x=lambda,y=beta, col=Age, shape=Age) , fill="black", size=7) +
scale_y_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_x_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_color_manual(values= c(cbPalette[c(7)],"skyblue", "grey40"))+
xlab(expression(lambda))+ylab(expression(beta))+
ggtitle("Simulated performance")+
theme_minimal()+
facet_wrap(~cond)+
theme(text = element_text(size=20,  family="sans"))
p1
p1 <- ggplot(dd, aes(y=beta, x=lambda, fill=mu)) +
scale_fill_viridis(name="Mean\nReward")+
geom_tile(color = "black") +
geom_point(data=dp,aes(x=lambda,y=beta, col=Age, shape=Age) , fill="black", size=7) +
scale_y_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_x_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_color_manual(values= c(cbPalette[c(7)],"skyblue", "grey40"))+
scale_shape_manual(values=c(2,3,4))+
xlab(expression(lambda))+ylab(expression(beta))+
ggtitle("Simulated performance")+
theme_minimal()+
facet_wrap(~cond)+
theme(text = element_text(size=20,  family="sans"))
p1
p1 <- ggplot(dd, aes(y=beta, x=lambda, fill=mu)) +
scale_fill_viridis(name="Mean\nReward")+
geom_tile(color = "black") +
geom_point(data=dp,aes(x=lambda,y=beta, col=Age, shape=Age) , fill="black", size=7) +
scale_y_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_x_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_color_manual(values= c(cbPalette[c(7)],"skyblue", "grey40"))+
scale_shape_manual(values=c(22,23,24))+
xlab(expression(lambda))+ylab(expression(beta))+
ggtitle("Simulated performance")+
theme_minimal()+
facet_wrap(~cond)+
theme(text = element_text(size=20,  family="sans"))
p1
p1 <- ggplot(dd, aes(y=beta, x=lambda, fill=mu)) +
scale_fill_viridis(name="Mean\nReward")+
geom_tile(color = "black") +
geom_point(data=dp,aes(x=lambda,y=beta, col=Age, shape=Age) , fill="black", size=7) +
scale_y_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_x_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_color_manual(values= c(cbPalette[c(7)],"skyblue", "grey40"))+
scale_shape_manual(values=c(22,23,24), fill=c(cbPalette[c(7)],"skyblue", "grey40"))+
xlab(expression(lambda))+ylab(expression(beta))+
ggtitle("Simulated performance")+
theme_minimal()+
facet_wrap(~cond)+
theme(text = element_text(size=20,  family="sans"))
p1
p1 <- ggplot(dd, aes(y=beta, x=lambda, fill=mu)) +
scale_fill_viridis(name="Mean\nReward")+
geom_tile(color = "black") +
geom_point(data=dp,aes(x=lambda,y=beta, col=Age, shape=Age) , fill="black", size=7) +
scale_y_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_x_continuous( expand = c(0, 0), breaks=seq(0.2,2,.2))+
scale_color_manual(values= c(cbPalette[c(7)],"skyblue", "grey40"))+
scale_shape_manual(values=c(15,19,17))+
xlab(expression(lambda))+ylab(expression(beta))+
ggtitle("Simulated performance")+
theme_minimal()+
facet_wrap(~cond)+
theme(text = element_text(size=20,  family="sans"))
p1
pdf("simperf.pdf", width=12, height=6)
p1
dev.off()
getwd
getwd()
mj<-fromJSON('https://comparekernels.firebaseio.com/.json')
m<-mj[[length(mj)]]
m$age
getwd()
setwd("/home/hanshalbe/kwg")
du<-read.csv("rbfucb.csv")
head(du)
age<-numeric()
#loop through json
for (i in 1:myjson$count){
#x-y-z
age<-c(age, rep(myjson$records$data$age[i], length(x)))
#trial number
}
rep(myjson$records$data$age[i], length(x))
myjson<-fromJSON("kwg.json")
#initialize empty data frame
age<-numeric()
#loop through json
for (i in 1:myjson$count){
#x-y-z
age<-c(age, rep(myjson$records$data$age[i], length(x)))
#trial number
}
length(age)==nrow(du)
length(age)
nrow(du)
read.csv("kwg.csv")
read.csv("kwgdata.csv")
d<-read.csv("kwgdata.csv")
nrow(d)
ddply(d, ~id, age=age[1])
ddply(d, ~id, summarize, age=age[1])
d<-ddply(d, ~id, summarize, age=age[1])
head(du)
mymean<-function(x){mean(x[x<=5])}
mymean<-function(x){mean(exp(x[exp(x)<=5]))}
ddply(d, ~id, mymean(par1))
ddply(d, ~id,summarize, mymean(par1))
du$lambda<-exp(du$par1)
du$beta<-exp(du$par2)
du$tau<-exp(du$par3)
mymean<-function(x){mean(x[x<=5]))}
mymean<-function(x){mean(x[x<=5])}
d<-ddply(d, ~id, summarize, age=age[1])
du$lambda<-exp(du$par1)
du$beta<-exp(du$par2)
du$tau<-exp(du$par3)
mymean<-function(x){mean(x[x<=5])}
ddply(d, ~id,summarize, mymean(par1))
Q
Q
Q
dd<-ddply(du, ~id,summarize, beta=mymean(par1))
dd<-ddply(du, ~id,summarize, lambda=mymean(lambda), beta=mymean(beta), tau=mymean(tau))
dd
d
dd$age<-d$age
dd<-subset(dd, age>=18)
cor.test(du$lambda, du$age)
du$lambda
cor.test(dd$lambda, dd$age)
setwd("/home/hanshalbe/kwg")
du<-read.csv("rbfucb.csv")
d<-read.csv("kwgdata.csv")
d<-ddply(d, ~id, summarize, age=age[1])
du$lambda<-exp(du$par1)
du$beta<-exp(du$par2)
du$tau<-exp(du$par3)
mymean<-function(x){mean(x[x<=5])}
dd<-ddply(du, ~id,summarize, lambda=mymean(lambda), beta=mymean(beta), tau=mymean(tau))
dd$age<-d$age
dd<-subset(dd, age>=10)
cor.test(dd$lambda, dd$age)
dd<-subset(dd, age>=12)
cor.test(dd$lambda, dd$age)
library(BayesFactor)
correlationBF(dd$lambda, dd$age)
cor.test(dd$beta, dd$age)
correlationBF(dd$lambda, dd$age)
correlationBF(dd$beta, dd$age)
correlationBF(dd$beta, dd$age)
cor.test(dd$tau, dd$age)
correlationBF(dd$tau, dd$age)
