panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))
pall
pall<-ggplot(data = dp1) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(model)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dall, aes(x = as.numeric(model) + 0.2,  y = r2,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(model), y = d_ymin, xend = as.numeric(model), yend = d_ymax)) +
#top horizontal segment
geom_segment(aes(x = as.numeric(model) - 0.1,  y = d_ymax, xend = as.numeric(model),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(model) - 0.1, y = d_ymin, xend = as.numeric(model), yend = d_ymin)) +facet_grid(Condition~Age)+
#theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Sampling strategy")+ylab(expression("Predicitive accuracy:"~R^2))+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c(expression(M(x)),expression(V(x)), expression(UCB(x))))+
ggtitle("A: MT predictive performance")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))
pall
dp<-data.frame(estimate=exp(c(du$par1, du$par2,du$par3)), id=rep(du$id, 3), param=rep(c("theta[epsilon]^2", "beta", "tau"), each=nrow(du)))
#dp<-subset(dp, estimate<3)
#condition and age
dp$condition<-0
dp$age<-0
for (i in 1:nrow(dp)){
dp$condition[i]<-dat$cond[dp$id[i]==dat$id]
dp$age[i]<-dat$age[dp$id[i]==dat$id]
}
dp$Age<-dp$age
dp$Age<-factor(dp$Age, levels=c("7-8", "9-11", ">18"))
dp$Condition<-factor(dp$condition, levels=c("Rough", "Smooth"))
dp$param<-factor(dp$param, levels=(c(expression(theta[epsilon]^2), expression(beta), expression(tau))))
#data frame with everything we need, i.e. min, max, lower nad upper quantile, median, CIs & mean
dp2<-ddply(dp, ~Condition+Age+param, summarize,
d_ymin = max(min(estimate), quantile(estimate, 0.25) - 1.5 * IQR(estimate)),
d_ymax = min(max(estimate), quantile(estimate, 0.75) + 1.5 * IQR(estimate)),
d_lower = quantile(estimate, 0.25),  d_middle = median(estimate), d_upper = quantile(estimate, 0.75),
mu=mean(estimate))
head(dp)
#dp<-ddply(dp, ~id+param+Condition+Age, summarize, estimate=mean(estimate))
p2<-ggplot(data = dp2) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(Age)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dp, aes(x = as.numeric(Age) + 0.2,  y = estimate,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(Age), y = d_ymin, xend = as.numeric(Age), yend = d_ymax)) +
geom_point(aes(x = as.numeric(Age)-0.2, y = mu), shape=23, size=3, fill="white", color="black") +
#top horizontal segment
geom_segment(aes(x = as.numeric(Age) - 0.1,  y = d_ymax, xend = as.numeric(Age),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(Age) - 0.1, y = d_ymin, xend = as.numeric(Age), yend = d_ymin)) +
facet_grid(Condition~param,  labeller = label_parsed)+  #theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Age")+ylab("Estimate")+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c("7-8", "9-11", ">18"))+
ggtitle("B: MT-UCB parameter estimates")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))+scale_y_log10()
p2
p2<-ggplot(data = dp2) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(Age)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dp, aes(x = as.numeric(Age) + 0.2,  y = estimate,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(Age), y = d_ymin, xend = as.numeric(Age), yend = d_ymax)) +
#top horizontal segment
geom_segment(aes(x = as.numeric(Age) - 0.1,  y = d_ymax, xend = as.numeric(Age),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(Age) - 0.1, y = d_ymin, xend = as.numeric(Age), yend = d_ymin)) +
facet_grid(Condition~param,  labeller = label_parsed)+  #theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Age")+ylab("Estimate")+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c("7-8", "9-11", ">18"))+
ggtitle("B: MT-UCB parameter estimates")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))+scale_y_log10()
p2
#dp<-ddply(dp, ~id+param+Condition+Age, summarize, estimate=mean(estimate))
p2<-ggplot(data = dp2) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(Age)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dp, aes(x = as.numeric(Age) + 0.2,  y = estimate,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(Age), y = d_ymin, xend = as.numeric(Age), yend = d_ymax)) +
#top horizontal segment
geom_segment(aes(x = as.numeric(Age) - 0.1,  y = d_ymax, xend = as.numeric(Age),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(Age) - 0.1, y = d_ymin, xend = as.numeric(Age), yend = d_ymin)) +
facet_grid(Condition~param,  labeller = label_parsed)+  #theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Age")+ylab("Estimate")+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c("7-8", "9-11", ">18"))+
ggtitle("B: MT-UCB parameter estimates")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))+ scale_y_log10(breaks = trans_breaks("log10", function(x) 10^x),
labels = trans_format("log10", math_format(10^.x)))
p2
#dp<-ddply(dp, ~id+param+Condition+Age, summarize, estimate=mean(estimate))
p2<-ggplot(data = dp2) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(Age)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dp, aes(x = as.numeric(Age) + 0.2,  y = estimate,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(Age), y = d_ymin, xend = as.numeric(Age), yend = d_ymax)) +
#top horizontal segment
geom_segment(aes(x = as.numeric(Age) - 0.1,  y = d_ymax, xend = as.numeric(Age),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(Age) - 0.1, y = d_ymin, xend = as.numeric(Age), yend = d_ymin)) +
facet_grid(Condition~param,  labeller = label_parsed)+  #theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Age")+ylab("Estimate")+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c("7-8", "9-11", ">18"))+
ggtitle("B: MT-UCB parameter estimates")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))+scale_y_log10()+ annotation_logticks()
p2
#dp<-ddply(dp, ~id+param+Condition+Age, summarize, estimate=mean(estimate))
p2<-ggplot(data = dp2) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(Age)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dp, aes(x = as.numeric(Age) + 0.2,  y = estimate,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(Age), y = d_ymin, xend = as.numeric(Age), yend = d_ymax)) +
#top horizontal segment
geom_segment(aes(x = as.numeric(Age) - 0.1,  y = d_ymax, xend = as.numeric(Age),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(Age) - 0.1, y = d_ymin, xend = as.numeric(Age), yend = d_ymin)) +
facet_grid(Condition~param,  labeller = label_parsed)+  #theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Age")+ylab("Estimate")+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c("7-8", "9-11", ">18"))+
ggtitle("B: MT-UCB parameter estimates")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))+
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,10000))
p2
library(scales)
#dp<-ddply(dp, ~id+param+Condition+Age, summarize, estimate=mean(estimate))
p2<-ggplot(data = dp2) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(Age)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dp, aes(x = as.numeric(Age) + 0.2,  y = estimate,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(Age), y = d_ymin, xend = as.numeric(Age), yend = d_ymax)) +
#top horizontal segment
geom_segment(aes(x = as.numeric(Age) - 0.1,  y = d_ymax, xend = as.numeric(Age),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(Age) - 0.1, y = d_ymin, xend = as.numeric(Age), yend = d_ymin)) +
facet_grid(Condition~param,  labeller = label_parsed)+  #theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Age")+ylab("Estimate")+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c("7-8", "9-11", ">18"))+
ggtitle("B: MT-UCB parameter estimates")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))+
scale_y_continuous(trans=log_trans(), breaks=c(1,10,100,10000))
p2
p2<-ggplot(data = dp2) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(Age)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dp, aes(x = as.numeric(Age) + 0.2,  y = estimate,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(Age), y = d_ymin, xend = as.numeric(Age), yend = d_ymax)) +
#top horizontal segment
geom_segment(aes(x = as.numeric(Age) - 0.1,  y = d_ymax, xend = as.numeric(Age),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(Age) - 0.1, y = d_ymin, xend = as.numeric(Age), yend = d_ymin)) +
facet_grid(Condition~param,  labeller = label_parsed)+  #theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Age")+ylab("Estimate")+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c("7-8", "9-11", ">18"))+
ggtitle("B: MT-UCB parameter estimates")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))+
scale_y_continuous(trans=log_trans(), breaks=c(0.1, 1,10,100))
p2
#dp<-ddply(dp, ~id+param+Condition+Age, summarize, estimate=mean(estimate))
p2<-ggplot(data = dp2) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(Age)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dp, aes(x = as.numeric(Age) + 0.2,  y = estimate,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(Age), y = d_ymin, xend = as.numeric(Age), yend = d_ymax)) +
#top horizontal segment
geom_segment(aes(x = as.numeric(Age) - 0.1,  y = d_ymax, xend = as.numeric(Age),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(Age) - 0.1, y = d_ymin, xend = as.numeric(Age), yend = d_ymin)) +
facet_grid(Condition~param,  labeller = label_parsed)+  #theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Age")+ylab("Estimate")+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c("7-8", "9-11", ">18"))+
ggtitle("B: MT-UCB parameter estimates")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))+
scale_y_continuous(trans=log_trans(), breaks=c(0, 0.1, 1,10,100))
p2
#dp<-ddply(dp, ~id+param+Condition+Age, summarize, estimate=mean(estimate))
p2<-ggplot(data = dp2) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(Age)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dp, aes(x = as.numeric(Age) + 0.2,  y = estimate,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(Age), y = d_ymin, xend = as.numeric(Age), yend = d_ymax)) +
#top horizontal segment
geom_segment(aes(x = as.numeric(Age) - 0.1,  y = d_ymax, xend = as.numeric(Age),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(Age) - 0.1, y = d_ymin, xend = as.numeric(Age), yend = d_ymin)) +
facet_grid(Condition~param,  labeller = label_parsed)+  #theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Age")+ylab("Estimate")+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c("7-8", "9-11", ">18"))+
ggtitle("B: MT-UCB parameter estimates")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))+
scale_y_continuous(trans=log_trans(), breaks=c(0.01, 0.1, 1,10,100))
p2
dp<-data.frame(estimate=exp(c(dm$par1, dm$par3)), id=rep(dm$id, 2), param=rep(c("theta[epsilon]^2", "tau"), each=nrow(dm)))
#condition and age
dp$condition<-0
dp$age<-0
for (i in 1:nrow(dp)){
dp$condition[i]<-dat$cond[dp$id[i]==dat$id]
dp$age[i]<-dat$age[dp$id[i]==dat$id]
}
dp$Age<-dp$age
dp$Age<-factor(dp$Age, levels=c("7-8", "9-11", ">18"))
dp$Condition<-factor(dp$condition, levels=c("Rough", "Smooth"))
dp$param<-factor(dp$param, levels=(c("theta[epsilon]^2", "tau")))
dp<-subset(dp, estimate<3)
dp<-data.frame(estimate=exp(c(dm$par1, dm$par3)), id=rep(dm$id, 2), param=rep(c("theta[epsilon]^2", "tau"), each=nrow(dm)))
#condition and age
dp$condition<-0
dp$age<-0
for (i in 1:nrow(dp)){
dp$condition[i]<-dat$cond[dp$id[i]==dat$id]
dp$age[i]<-dat$age[dp$id[i]==dat$id]
}
dp$Age<-dp$age
dp$Age<-factor(dp$Age, levels=c("7-8", "9-11", ">18"))
dp$Condition<-factor(dp$condition, levels=c("Rough", "Smooth"))
dp$param<-factor(dp$param, levels=(c("theta[epsilon]^2", "tau")))
dp3<-ddply(dp, ~Condition+Age+param, summarize,
d_ymin = max(min(estimate), quantile(estimate, 0.25) - 1.5 * IQR(estimate)),
d_ymax = min(max(estimate), quantile(estimate, 0.75) + 1.5 * IQR(estimate)),
d_lower = quantile(estimate, 0.25),  d_middle = median(estimate), d_upper = quantile(estimate, 0.75),
mu=mean(estimate))
p3<-ggplot(data = dp3) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(Age)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dp, aes(x = as.numeric(Age) + 0.2,  y = estimate,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(Age), y = d_ymin, xend = as.numeric(Age), yend = d_ymax)) +
geom_point(aes(x = as.numeric(Age)-0.2, y = mu), shape=23, size=3, fill="white", color="black") +
#top horizontal segment
geom_segment(aes(x = as.numeric(Age) - 0.1,  y = d_ymax, xend = as.numeric(Age),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(Age) - 0.1, y = d_ymin, xend = as.numeric(Age), yend = d_ymin)) +
facet_grid(Condition~param,  labeller = label_parsed)+  #theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Age")+ylab("Estimate")+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c("7-8", "9-11", ">18"))+
ggtitle("C: MT-Mean greedy parameter estimates")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))
p3
p3<-ggplot(data = dp3) +
#boxplot with given values, we only need half of it
geom_boxplot(aes(x = as.numeric(Age)-0.2, ymin = d_lower, ymax = d_upper, lower = d_lower,
middle = d_middle, upper = d_upper, width = 2 * 0.2, fill = Age), stat = "identity") +
#jitter of raw data points, needs the full data frame
geom_jitter(data=dp, aes(x = as.numeric(Age) + 0.2,  y = estimate,  color = Age),
width = 0.2 - 0.25 * 0.2, height = 0, size=0.1)+
#vertical segment
geom_segment(aes(x = as.numeric(Age), y = d_ymin, xend = as.numeric(Age), yend = d_ymax)) +
geom_point(aes(x = as.numeric(Age)-0.2, y = mu), shape=23, size=3, fill="white", color="black") +
#top horizontal segment
geom_segment(aes(x = as.numeric(Age) - 0.1,  y = d_ymax, xend = as.numeric(Age),  yend = d_ymax)) +
#top vertical segment
geom_segment(aes(x = as.numeric(Age) - 0.1, y = d_ymin, xend = as.numeric(Age), yend = d_ymin)) +
facet_grid(Condition~param,  labeller = label_parsed)+  #theme minimal
theme_minimal()+
#sans
theme(text = element_text(size=fontsize,  family="sans"))+
#colors and fill
scale_fill_manual(values = c(cbPalette[c(7,6)], "grey40"))+
scale_color_manual(values = c(cbPalette[c(7,6)], "grey40"))+
#labs
xlab("Age")+ylab("Estimate")+
#no legend
theme(legend.position="none", strip.background=element_blank(), legend.key=element_rect(color=NA))+
#labe x-axis
scale_x_continuous(breaks = c(1,2,3),labels = c("7-8", "9-11", ">18"))+
ggtitle("C: MT-Mean greedy parameter estimates")+
#various theme changes including reducing white space and adding axes
theme(axis.line.x = element_line(color="grey20", size = 1),
axis.line.y = element_line(color="grey20", size = 1),
panel.spacing.x=unit(0.2, "lines"),
panel.spacing.y=unit(1, "lines"),
plot.title = element_text(family = "sans", margin=margin(0,0,0,0)),
plot.margin = unit(c(0.1, 0.1, 0.1, 0.1), "cm"))+
scale_y_continuous(trans=log_trans(), breaks=c(0.01, 0.1, 1,10,100))
p3
dm<-read.csv("mtgreedymean.csv")
dv<-read.csv("mtgreedyvariance.csv")
du<-read.csv("mtucb.csv")
dat<-read.csv("kwgdata.csv")
dat<-ddply(dat, ~id, summarize, age=agegroup[1])
dp<-data.frame(estimate=exp(c(du$par1, du$par2,du$par3)), id=rep(du$id, 3),age=rep(rep(dat$age, each=8),3), param=rep(c("lambda", "beta", "tau"), each=nrow(du)))
dp<-subset(dp, estimate<5)
dm<-read.csv("mtgreedymean.csv")
dv<-read.csv("mtgreedyvariance.csv")
du<-read.csv("mtucb.csv")
dat<-read.csv("kwgdata.csv")
library(plyr)
dat<-ddply(dat, ~id, summarize, age=agegroup[1])
#parameters
dp<-data.frame(estimate=exp(c(du$par1, du$par2,du$par3)), id=rep(du$id, 3),age=rep(rep(dat$age, each=8),3), param=rep(c("lambda", "beta", "tau"), each=nrow(du)))
dp<-subset(dp, estimate<5)
dp<-data.frame(estimate=exp(c(du$par1, du$par2,du$par3)), id=rep(du$id, 3),age=rep(rep(dat$age, each=8),3), param=rep(c("lambda", "beta", "tau"), each=nrow(du)))
dp<-subset(dp, estimate<5)
ddply(dp, ~param, summarize, mean(estimate))
